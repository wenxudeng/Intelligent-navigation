<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <!-- 配置自动扫描的包，扫描handler -->
    <context:component-scan base-package="edu.hust.top.controller"></context:component-scan>

    <!-- 配置注解驱动 -->
    <mvc:annotation-driven />

    <!-- 配置视图解析 -->
    <!--<bean id="" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/templates"></property>
        <property name="suffix" value=".html"></property>
    </bean>-->
    <!--以下三个bean是为了使用thymeleaf模板而配置的-->
    <bean id="viewResolver" class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"></property>
        <property name="characterEncoding" value="UTF-8"></property>
    </bean>

    <bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"></property>
    </bean>

    <bean id="templateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/"></property>
        <property name="suffix" value=".html"></property>
        <property name="templateMode" value="HTML5"></property>
        <property name="characterEncoding" value="UTF-8"></property>
    </bean>

    <!-- 配置基于xml的异常映射处理 -->
    <bean id="simpleMappingExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- 配置异常类型和具体视图页面的对应关系 -->
        <property name="exceptionMappings">
            <props>
                <!-- key属性指定异常全类名 -->
                <!-- 标签体中写视图页面 -->
                <prop key="java.lang.Exception">index</prop>
            </props>
        </property>
    </bean>

    <!--表单中上传文件需要的bean-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="104857600" />
        <property name="maxInMemorySize" value="4096" />
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

    <!-- 配置view-controller，直接把请求与视图关联起来不用写handler方法 -->
    <mvc:view-controller path="/index.html" view-name="index"></mvc:view-controller>
    <mvc:view-controller path="/manager/to/main/page.html" view-name="main"></mvc:view-controller>
    <mvc:view-controller path="/manager/to/change/password/page.html" view-name="manager-change-password"></mvc:view-controller>
    <mvc:view-controller path="/region/to/add/page.html" view-name="region-add"></mvc:view-controller>

    <!-- 注册拦截器 使用springSecurity之后不用自定义的拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/manager/do/login.json"/>
            <mvc:exclude-mapping path="/index.html"/>
            <bean id="loginInterceptor" class="edu.hust.top.interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>
